Time complexity: 
𝑂(𝑛)
 where n is the number of nodes in the linked list. Each node is processed once.

Space complexity: 
𝑂(1)
 since no extra space is required aside from a few integer variables.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        ListNode p1=head;
        int n=0;
        while(p1!=null)
        {
            n++;
            p1=p1.next;
        }
        int sum=0;
        p1=head;
        while(p1!=null)
        {
            sum+=p1.val*(int)Math.pow(2,--n);
            p1=p1.next;
        }
        return sum;
    }
}
